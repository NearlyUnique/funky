namespace FunkyGen;

public sealed partial class FunkyGenerator
{
    private static readonly string FunkyNamespaceName = "FunkyGen";
    private static readonly string FunkyNamespaceShortName = "Funky";
    private static readonly string FunkyNamespaceLongName = $"{FunkyNamespaceShortName}Attribute";
    private static readonly string FunkyAttributeFullname = $"{FunkyNamespaceName}.{FunkyNamespaceLongName}";

    private static readonly string GeneratedCodeAttribute =
        $@"[global::System.CodeDom.Compiler.GeneratedCodeAttribute("+
        $@"""{typeof(FunkyGenerator).Assembly.GetName().Name}"", "+
        $@"""{typeof(FunkyGenerator).Assembly.GetName().Version}"""+
        $@")]";

    private static readonly string FunkyMockAttributeSource = $@"// <auto-generated/>
#nullable enable
namespace {FunkyNamespaceName};
{GeneratedCodeAttribute}
[global::System.AttributeUsageAttribute(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
internal sealed class {FunkyNamespaceLongName} : global::System.Attribute
{{
    public {FunkyNamespaceLongName}(global::System.Type type) => Type = type;
    public global::System.Type Type {{ get; }}
}}
";
}
