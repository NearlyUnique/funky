<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <RootNamespace>FunkyGen</RootNamespace>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <LangVersion>latest</LangVersion>
        <Title>Funky Mock Source Generator</Title>
        <Authors>Adam Straughan</Authors>
        <Description>Add [ Funky( typeof( IAnyInterface ) ] to your partial class and have the mocked class code generated</Description>
        <PackageProjectUrl>https://github.com/NearlyUnique/funky</PackageProjectUrl>
        <RepositoryUrl>https://github.com/NearlyUnique/funky</RepositoryUrl>
        <PackageTags>testing</PackageTags>
    </PropertyGroup>

    <PropertyGroup>
        <IsRoslynComponent>true</IsRoslynComponent>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <NoWarn>$(NoWarn);nullable</NoWarn>
    </PropertyGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <PackageReference Include="IsExternalInit" Version="1.0.3" PrivateAssets="all" />
        <PackageReference Include="Nullable" Version="1.3.1" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
      <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.5.0-2.final" />
    </ItemGroup>

</Project>
