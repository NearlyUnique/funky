namespace FunkyMock;

public sealed partial class FunkyIncrementalGenerator
{
    private static readonly string FunkyNamespaceName = "FunkyMock";
    private static readonly string FunkyNamespaceShortName = "Funky";
    private static readonly string FunkyNamespaceLongName = $"{FunkyNamespaceShortName}Attribute";
    private static readonly string FunkyAttributeFullname = $"{FunkyNamespaceName}.{FunkyNamespaceLongName}";

    private static readonly string GeneratedCodeAttribute =
        $@"[global::System.CodeDom.Compiler.GeneratedCodeAttribute("+
        $@"""{typeof(FunkyIncrementalGenerator).Assembly.GetName().Name}"", "+
        $@"""{typeof(FunkyIncrementalGenerator).Assembly.GetName().Version}"""+
        $@")]";

    private static readonly string FunkyMockAttributeSource = $@"// <auto-generated/>
#nullable enable
namespace {FunkyNamespaceName};
{GeneratedCodeAttribute}
[global::System.AttributeUsageAttribute(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
internal sealed class {FunkyNamespaceLongName} : global::System.Attribute {{ }}
";
}
